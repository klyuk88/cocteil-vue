/* Functional styling;
 * These styles are required for noUiSlider to function.
 * You don't need to change these rules to apply your design.
 */

.noUi-target,
.noUi-target * {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-user-select: none;
  touch-action: none;
  -ms-user-select: none;
  -moz-user-select: none;
  user-select: none;
  box-sizing: border-box;
}

.noUi-target {
  position: relative;
}

.noUi-base,
.noUi-connects {
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
}

/* Wrapper for all connect elements.
 */

.noUi-connects {
  overflow: hidden;
  z-index: 0;
}

.noUi-connect,
.noUi-origin {
  will-change: transform;
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  height: 100%;
  width: 100%;
  -ms-transform-origin: 0 0;
  -webkit-transform-origin: 0 0;
  -webkit-transform-style: preserve-3d;
  transform-origin: 0 0;
  transform-style: flat;
}

/* Offset direction
 */

.noUi-txt-dir-rtl.noUi-horizontal .noUi-origin {
  left: 0;
  right: auto;
}

/* Give origins 0 height/width so they don't interfere with clicking the
 * connect elements.
 */

.noUi-vertical .noUi-origin {
  top: -100%;
  width: 0;
}

.noUi-horizontal .noUi-origin {
  height: 0;
}

.noUi-handle {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  position: absolute;
}

.noUi-touch-area {
  height: 100%;
  width: 100%;
}

.noUi-state-tap .noUi-connect,
.noUi-state-tap .noUi-origin {
  transition: transform 0.3s;
}

.noUi-state-drag * {
  cursor: inherit !important;
}

/* Slider size and handle placement;
 */

.noUi-horizontal {
  height: 18px;
}

.noUi-horizontal .noUi-handle {
  width: 34px;
  height: 28px;
  right: -17px;
  top: -6px;
}

.noUi-vertical {
  width: 18px;
}

.noUi-vertical .noUi-handle {
  width: 28px;
  height: 34px;
  right: -6px;
  bottom: -17px;
}

.noUi-txt-dir-rtl.noUi-horizontal .noUi-handle {
  left: -17px;
  right: auto;
}

/* Styling;
 * Giving the connect element a border radius causes issues with using transform: scale
 */

.noUi-target {
  background: #FAFAFA;
  border-radius: 4px;
  border: 1px solid #D3D3D3;
  box-shadow: inset 0 1px 1px #F0F0F0, 0 3px 6px -5px #BBB;
}

.noUi-connects {
  border-radius: 3px;
}

.noUi-connect {
  background: #3FB8AF;
}

/* Handles and cursors;
 */

.noUi-draggable {
  cursor: ew-resize;
}

.noUi-vertical .noUi-draggable {
  cursor: ns-resize;
}

.noUi-handle {
  border: 1px solid #D9D9D9;
  border-radius: 3px;
  background: #FFF;
  cursor: default;
  box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #EBEBEB, 0 3px 6px -3px #BBB;
}

.noUi-active {
  box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB;
}

/* Handle stripes;
 */

.noUi-handle:before,
.noUi-handle:after {
  content: "";
  display: block;
  position: absolute;
  height: 14px;
  width: 1px;
  background: #E8E7E6;
  left: 14px;
  top: 6px;
}

.noUi-handle:after {
  left: 17px;
}

.noUi-vertical .noUi-handle:before,
.noUi-vertical .noUi-handle:after {
  width: 14px;
  height: 1px;
  left: 6px;
  top: 14px;
}

.noUi-vertical .noUi-handle:after {
  top: 17px;
}

/* Disabled state;
 */

[disabled] .noUi-connect {
  background: #B8B8B8;
}

[disabled].noUi-target,
[disabled].noUi-handle,
[disabled] .noUi-handle {
  cursor: not-allowed;
}

/* Base;
 *
 */

.noUi-pips,
.noUi-pips * {
  box-sizing: border-box;
}

.noUi-pips {
  position: absolute;
  color: #999;
}

/* Values;
 *
 */

.noUi-value {
  position: absolute;
  white-space: nowrap;
  text-align: center;
}

.noUi-value-sub {
  color: #ccc;
  font-size: 10px;
}

/* Markings;
 *
 */

.noUi-marker {
  position: absolute;
  background: #CCC;
}

.noUi-marker-sub {
  background: #AAA;
}

.noUi-marker-large {
  background: #AAA;
}

/* Horizontal layout;
 *
 */

.noUi-pips-horizontal {
  padding: 10px 0;
  height: 80px;
  top: 100%;
  left: 0;
  width: 100%;
}

.noUi-value-horizontal {
  transform: translate(-50%, 50%);
}

.noUi-rtl .noUi-value-horizontal {
  transform: translate(50%, 50%);
}

.noUi-marker-horizontal.noUi-marker {
  margin-left: -1px;
  width: 2px;
  height: 5px;
}

.noUi-marker-horizontal.noUi-marker-sub {
  height: 10px;
}

.noUi-marker-horizontal.noUi-marker-large {
  height: 15px;
}

/* Vertical layout;
 *
 */

.noUi-pips-vertical {
  padding: 0 10px;
  height: 100%;
  top: 0;
  left: 100%;
}

.noUi-value-vertical {
  transform: translate(0, -50%);
  padding-left: 25px;
}

.noUi-rtl .noUi-value-vertical {
  transform: translate(0, 50%);
}

.noUi-marker-vertical.noUi-marker {
  width: 5px;
  height: 2px;
  margin-top: -1px;
}

.noUi-marker-vertical.noUi-marker-sub {
  width: 10px;
}

.noUi-marker-vertical.noUi-marker-large {
  width: 15px;
}

.noUi-tooltip {
  display: block;
  position: absolute;
  border: 1px solid #D9D9D9;
  border-radius: 3px;
  background: #fff;
  color: #000;
  padding: 5px;
  text-align: center;
  white-space: nowrap;
}

.noUi-horizontal .noUi-tooltip {
  transform: translate(-50%, 0);
  left: 50%;
  bottom: 120%;
}

.noUi-vertical .noUi-tooltip {
  transform: translate(0, -50%);
  top: 50%;
  right: 120%;
}

.noUi-horizontal .noUi-origin > .noUi-tooltip {
  transform: translate(50%, 0);
  left: auto;
  bottom: 10px;
}

.noUi-vertical .noUi-origin > .noUi-tooltip {
  transform: translate(0, -18px);
  top: auto;
  right: 28px;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: var(--bs-body-font-family);
  font-size: var(--bs-body-font-size);
  font-weight: var(--bs-body-font-weight);
  line-height: var(--bs-body-line-height);
  color: var(--bs-body-color);
  text-align: var(--bs-body-text-align);
  background-color: var(--bs-body-bg);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

hr {
  margin: 1rem 0;
  color: inherit;
  background-color: currentColor;
  border: 0;
  opacity: 0.25;
}

hr:not([size]) {
  height: 1px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2;
}

h1 {
  font-size: calc(1.375rem + 1.5vw);
}

h2 {
  font-size: calc(1.325rem + 0.9vw);
}

h3 {
  font-size: calc(1.3rem + 0.6vw);
}

h4 {
  font-size: calc(1.275rem + 0.3vw);
}

h5 {
  font-size: 1.25rem;
}

h6 {
  font-size: 1rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title],
abbr[data-bs-original-title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul {
  padding-left: 2rem;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 0.875em;
}

mark {
  padding: 0.2em;
  background-color: #fcf8e3;
}

sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

a {
  color: #0d6efd;
  text-decoration: underline;
}

a:hover {
  color: #0a58ca;
}

a:not([href]):not([class]),
a:not([href]):not([class]):hover {
  color: inherit;
  text-decoration: none;
}

pre,
code,
kbd,
samp {
  font-family: var(--bs-font-monospace);
  font-size: 1em;
  direction: ltr ;
  unicode-bidi: bidi-override;
}

pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em;
}

pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}

code {
  font-size: 0.875em;
  color: #d63384;
  word-wrap: break-word;
}

a > code {
  color: inherit;
}

kbd {
  padding: 0.2rem 0.4rem;
  font-size: 0.875em;
  color: #fff;
  background-color: #212529;
  border-radius: 0.2rem;
}

kbd kbd {
  padding: 0;
  font-size: 1em;
  font-weight: 700;
}

figure {
  margin: 0 0 1rem;
}

img,
svg {
  vertical-align: middle;
}

table {
  caption-side: bottom;
  border-collapse: collapse;
}

caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: #6c757d;
  text-align: left;
}

th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}

thead,
tbody,
tfoot,
tr,
td,
th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}

label {
  display: inline-block;
}

button {
  border-radius: 0;
}

button:focus:not(:focus-visible) {
  outline: 0;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
select {
  text-transform: none;
}

[role="button"] {
  cursor: pointer;
}

select {
  word-wrap: normal;
}

select:disabled {
  opacity: 1;
}

[list]::-webkit-calendar-picker-indicator {
  display: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button:not(:disabled),
[type="button"]:not(:disabled),
[type="reset"]:not(:disabled),
[type="submit"]:not(:disabled) {
  cursor: pointer;
}

::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

textarea {
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: calc(1.275rem + 0.3vw);
  line-height: inherit;
}

legend + * {
  clear: left;
}

::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}

::-webkit-inner-spin-button {
  height: auto;
}

[type="search"] {
  outline-offset: -2px;
  -webkit-appearance: textfield;
}

/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

::file-selector-button {
  font: inherit;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

iframe {
  border: 0;
}

summary {
  display: list-item;
  cursor: pointer;
}

progress {
  vertical-align: baseline;
}

[hidden] {
  display: none !important;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1055;
  display: none;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
}

.modal-dialog {
  position: relative;
  width: auto;
  margin: 0.5rem;
  pointer-events: none;
}

.modal.fade .modal-dialog {
  transition: transform 0.3s ease-out;
  transform: translate(0, -50px);
}

.modal.show .modal-dialog {
  transform: none;
}

.modal.modal-static .modal-dialog {
  transform: scale(1.02);
}

.modal-dialog-scrollable {
  height: calc(100% - 1rem);
}

.modal-dialog-scrollable .modal-content {
  max-height: 100%;
  overflow: hidden;
}

.modal-dialog-scrollable .modal-body {
  overflow-y: auto;
}

.modal-dialog-centered {
  display: flex;
  align-items: center;
  min-height: calc(100% - 1rem);
}

.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  pointer-events: auto;
  background-color: #fff;
  background-clip: padding-box;
  border: 0 solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: 0;
}

.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1050;
  width: 100vw;
  height: 100vh;
  background-color: #000;
}

.modal-backdrop.fade {
  opacity: 0;
}

.modal-backdrop.show {
  opacity: 0.5;
}

.modal-header {
  display: flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 1rem;
  border-bottom: 0 solid #dee2e6;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.modal-header .btn-close {
  padding: 0.5rem 0.5rem;
  margin: -0.5rem -0.5rem -0.5rem auto;
}

.modal-title {
  margin-bottom: 0;
  line-height: 1.5;
}

.modal-body {
  position: relative;
  flex: 1 1 auto;
  padding: 1rem;
}

.modal-footer {
  display: flex;
  flex-wrap: wrap;
  flex-shrink: 0;
  align-items: center;
  justify-content: flex-end;
  padding: 0.75rem;
  border-top: 0 solid #dee2e6;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.modal-footer > * {
  margin: 0.25rem;
}

.modal-fullscreen {
  width: 100vw;
  max-width: none;
  height: 100%;
  margin: 0;
}

.modal-fullscreen .modal-content {
  height: 100%;
  border: 0;
  border-radius: 0;
}

.modal-fullscreen .modal-header {
  border-radius: 0;
}

.modal-fullscreen .modal-body {
  overflow-y: auto;
}

.modal-fullscreen .modal-footer {
  border-radius: 0;
}

.fade {
  transition: opacity 0.15s linear;
}

.fade:not(.show) {
  opacity: 0;
}

.collapse:not(.show) {
  display: none;
}

.collapsing {
  height: 0;
  overflow: hidden;
  transition: height 0.35s ease;
}

.collapsing.collapse-horizontal {
  width: 0;
  height: auto;
  transition: width 0.35s ease;
}

@font-face {
  font-family: 'swiper-icons';
  src: url("data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA") format("woff");
  font-weight: 400;
  font-style: normal;
}

:root {
  --swiper-theme-color: #007aff;
}

.swiper-container {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
}

.swiper-container-vertical > .swiper-wrapper {
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}

.swiper-container-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0);
}

.swiper-container-multirow > .swiper-wrapper {
  flex-wrap: wrap;
}

.swiper-container-multirow-column > .swiper-wrapper {
  flex-wrap: wrap;
  flex-direction: column;
}

.swiper-container-free-mode > .swiper-wrapper {
  transition-timing-function: ease-out;
  margin: 0 auto;
}

.swiper-container-pointer-events {
  touch-action: pan-y;
}

.swiper-container-pointer-events.swiper-container-vertical {
  touch-action: pan-x;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */

.swiper-container-autoheight,
.swiper-container-autoheight .swiper-slide {
  height: auto;
}

.swiper-container-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height;
}

/* 3D Effects */

.swiper-container-3d {
  perspective: 1200px;
}

.swiper-container-3d .swiper-wrapper,
.swiper-container-3d .swiper-slide,
.swiper-container-3d .swiper-slide-shadow-left,
.swiper-container-3d .swiper-slide-shadow-right,
.swiper-container-3d .swiper-slide-shadow-top,
.swiper-container-3d .swiper-slide-shadow-bottom,
.swiper-container-3d .swiper-cube-shadow {
  transform-style: preserve-3d;
}

.swiper-container-3d .swiper-slide-shadow-left,
.swiper-container-3d .swiper-slide-shadow-right,
.swiper-container-3d .swiper-slide-shadow-top,
.swiper-container-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.swiper-container-3d .swiper-slide-shadow-left {
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-container-3d .swiper-slide-shadow-right {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-container-3d .swiper-slide-shadow-top {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-container-3d .swiper-slide-shadow-bottom {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */

.swiper-container-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  /* For Firefox */
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */
}

.swiper-container-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}

.swiper-container-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-container-horizontal.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
}

.swiper-container-vertical.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory;
}

@font-face {
  font-family: "Bad Script";
  src: url(../fonts/BadScript-Regular.eot);
  src: url(../fonts/BadScript-Regular.eot?#iefix) format("embedded-opentype"), url(../fonts/BadScript-Regular.woff2) format("woff2"), url(../fonts/BadScript-Regular.woff) format("woff"), url(../fonts/BadScript-Regular.ttf) format("truetype");
  font-weight: 400;
  font-style: "normal";
  font-display: swap;
}

@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Thin.eot);
  src: url(../fonts/Roboto-Thin.eot?#iefix) format("embedded-opentype"), url(../fonts/Roboto-Thin.woff2) format("woff2"), url(../fonts/Roboto-Thin.woff) format("woff"), url(../fonts/Roboto-Thin.ttf) format("truetype");
  font-weight: 400;
  font-style: "normal";
  font-display: swap;
}

@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Light.eot);
  src: url(../fonts/Roboto-Light.eot?#iefix) format("embedded-opentype"), url(../fonts/Roboto-Light.woff2) format("woff2"), url(../fonts/Roboto-Light.woff) format("woff"), url(../fonts/Roboto-Light.ttf) format("truetype");
  font-weight: 400;
  font-style: "normal";
  font-display: swap;
}

@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Medium.eot);
  src: url(../fonts/Roboto-Medium.eot?#iefix) format("embedded-opentype"), url(../fonts/Roboto-Medium.woff2) format("woff2"), url(../fonts/Roboto-Medium.woff) format("woff"), url(../fonts/Roboto-Medium.ttf) format("truetype");
  font-weight: 500;
  font-style: "normal";
  font-display: swap;
}

@font-face {
  font-family: "Roboto";
  src: url(../fonts/Roboto-Regular.eot);
  src: url(../fonts/Roboto-Regular.eot?#iefix) format("embedded-opentype"), url(../fonts/Roboto-Regular.woff2) format("woff2"), url(../fonts/Roboto-Regular.woff) format("woff"), url(../fonts/Roboto-Regular.ttf) format("truetype");
  font-weight: 400;
  font-style: "normal";
  font-display: swap;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 16px;
  margin-right: 0 !important;
  height: 100%;
}

body {
  color: #121212;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 140%;
  font-family: "Roboto", "Open Sans", sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Oxygen, Cantarell, "Helvetica Neue";
  overflow-x: hidden;
  background: #FFFDF5;
  height: 100%;
}

ul[class],
ol[class] {
  list-style: none;
  padding: 0;
}

ul,
ol {
  margin: 0;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
  -o-object-fit: cover;
  object-fit: cover;
}

input,
button,
textarea,
select {
  font: inherit;
}

input,
textarea {
  font-family: inherit;
  outline: none;
  resize: none;
  border-radius: 0;
  -webkit-border-radius: 0;
  -webkit-appearance: none;
  transition: .3s linear;
}

input::-moz-placeholder,
textarea::-moz-placeholder {
  font-family: inherit;
  -moz-transition: .3s linear;
  transition: .3s linear;
}

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  font-family: inherit;
  -ms-transition: .3s linear;
  transition: .3s linear;
}

input::placeholder,
textarea::placeholder {
  font-family: inherit;
  transition: .3s linear;
}

input:focus,
input:active,
textarea:focus,
textarea:active {
  outline: none !important;
  box-shadow: none !important;
}

input::-ms-clear,
input::-ms-reveal,
textarea::-ms-clear,
textarea::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

input::-webkit-search-decoration,
input::-webkit-search-cancel-button,
input::-webkit-search-results-button,
input::-webkit-search-results-decoration,
textarea::-webkit-search-decoration,
textarea::-webkit-search-cancel-button,
textarea::-webkit-search-results-button,
textarea::-webkit-search-results-decoration {
  display: none;
}

button {
  padding: 0;
  border: none;
  font: inherit;
  color: inherit;
  background-color: transparent;
  cursor: pointer;
}

button:active,
button:focus {
  outline: none;
}

button::-moz-focus-inner {
  border: 0;
}

a {
  color: inherit;
  transition: .3s linear;
  text-decoration: none;
}

a:hover,
a:active {
  text-decoration: none;
  color: inherit;
}

svg {
  transition: .3s linear;
  fill: #121212;
  width: 1.25rem;
  height: 1.25rem;
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  overflow-x: hidden;
}

.content {
  flex: 1 0 auto;
}

.content--inner {
  padding-top: 0.75rem;
}

.content-title {
  margin-bottom: 3.75rem;
}

.f-script {
  font-family: 'Bad Script', cursive;
}

.o-hidden {
  overflow: hidden;
}

.flex {
  display: flex;
  flex-wrap: wrap;
}

.container {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: 74.375rem;
}

.section {
  margin-top: 9.375rem;
  margin-bottom: 9.375rem;
}

.section-title {
  font-size: 1.5rem;
  line-height: 87.3%;
  font-weight: 300;
}

.txt,
p {
  font-weight: 300;
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #7D7D7D;
}

.centered {
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn {
  background: #514A7E;
  font-size: 1rem;
  line-height: 1rem;
  color: #FFFDF5;
  padding: 0.625rem 1.25rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.btn:hover {
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
  color: #FFFDF5;
}

.swiper-pagination {
  display: flex;
  justify-content: center;
}

.swiper-pagination-bullet {
  width: 0.3125rem;
  height: 0.3125rem;
  border-radius: 50%;
  background: rgba(81, 74, 126, 0.4);
  margin: 0 0.1875rem;
}

.swiper-pagination-bullet-active {
  background: #514A7E;
}

.mobile {
  display: none;
}

.breadcrumbs-list {
  display: flex;
}

.breadcrumbs-list__item {
  font-size: 1rem;
  line-height: 1.4375rem;
  color: #514A7E;
}

.breadcrumbs-list__link {
  color: #7D7D7D;
  display: inline-flex;
}

.breadcrumbs-list__link::after {
  content: "/";
  margin: 0 0.25rem;
}

.noUi-tooltip {
  display: none;
}

.noUi-active .noUi-tooltip {
  display: block;
}

.noUi-connects {
  background: #7D7D7D;
  border: none;
  height: 1px;
}

.noUi-target {
  border-radius: 0;
  background: none;
  border: none;
  box-shadow: initial;
}

.noUi-connect {
  border-radius: 10px;
  background: #514A7E;
}

.noUi-touch-area {
  background: #514A7E;
  border-radius: 50%;
  border: none;
}

.noUi-handle {
  border: none;
}

.noUi-horizontal .noUi-handle {
  width: 0.4375rem;
  height: 0.4375rem;
  background: #514A7E;
  border-radius: 50%;
  cursor: pointer;
  top: 0;
  right: -0.4375rem;
  transform: translateY(-50%);
}

.noUi-horizontal .noUi-handle::before {
  display: none;
}

.noUi-horizontal .noUi-handle::after {
  display: none;
}

.noUi-horizontal .noUi-handle:hover .noUi-tooltip {
  opacity: 1;
}

.checkbox {
  display: block;
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1rem;
  color: #7D7D7D;
}

.checkbox-input {
  display: none;
}

.checkbox-input:checked + .checkbox-txt::before {
  background: #514A7E;
}

.checkbox-txt {
  display: flex;
  align-items: center;
}

.checkbox-txt::before {
  content: "";
  width: 0.4375rem;
  height: 0.4375rem;
  min-width: 0.4375rem;
  margin-right: 1.625rem;
  border: 0.5px solid #514A7E;
  border-radius: 50%;
}

.modal-content {
  background: #FFFDF5;
  border: none;
}

.modal-dialog--size {
  width: 74rem;
  max-width: 100% !important;
}

.modal-dialog--thanks {
  max-width: 100% !important;
  width: 90rem;
}

.modal-back {
  top: 2.5rem;
  left: 8.75rem;
  width: 2.6875rem;
  height: 2.6875rem;
  border-radius: 50%;
  background: #514A7E;
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
  position: absolute;
  z-index: 3;
  cursor: pointer;
}

.modal-back svg {
  fill: #FFFDF5;
  width: 1.0625rem;
  height: 0.5rem;
}

.modal-close {
  left: initial;
  top: 2rem;
  right: 8.375rem;
}

.modal-close svg {
  width: 1.25rem;
  height: 1.25rem;
}

.modal-thanks {
  text-align: center;
  padding-top: 9.375rem;
  padding-bottom: 9.375rem;
  position: relative;
  overflow: hidden;
}

.modal-thanks::after {
  content: "";
  width: 33.0625rem;
  height: 33.0625rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  right: 0;
  top: 3rem;
  transform: translateX(58%);
}

.modal-thanks__title {
  font-weight: 300;
  font-size: 2.5rem;
  line-height: 87.3%;
  margin-bottom: 0.625rem;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  margin-left: auto;
  margin-right: auto;
  position: relative;
}

.modal-thanks__title span {
  font-weight: 400;
  color: #514A7E;
  position: absolute;
  bottom: -5rem;
  right: -6.25rem;
}

.modal-thanks__txt {
  font-weight: 300;
  font-size: 1rem;
  line-height: 1.1875rem;
}

.modal-thanks__decor::before,
.modal-thanks__decor::after {
  content: "";
  position: absolute;
  border-radius: 50%;
  background: #514A7E;
  box-shadow: 0px 4px 20px rgba(51, 51, 51, 0.05);
}

.modal-thanks__decor::before {
  width: 4.5625rem;
  height: 4.5625rem;
  left: 8.4375rem;
  top: 7.1875rem;
}

.modal-thanks__decor::after {
  width: 2.9375rem;
  height: 2.9375rem;
  left: 19.6875rem;
  top: 15.3125rem;
}

.modal-size {
  padding-top: 7.5rem;
  padding-bottom: 5rem;
  padding-left: 8.375rem;
  padding-right: 8.375rem;
  position: relative;
  overflow: hidden;
}

.modal-size::after {
  content: "";
  width: 26.8125rem;
  height: 26.8125rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  right: 0;
  bottom: 5.25rem;
  transform: translateX(70%);
}

.modal-size__title {
  text-align: center;
  font-weight: 300;
  font-size: 2.5rem;
  line-height: 87.3%;
  margin-bottom: 3.75rem;
}

.modal-size__img {
  max-width: 42.5rem;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 3.75rem;
}

.modal-size__img img {
  margin-left: auto;
  margin-right: auto;
}

.scroll-top {
  width: 4.5rem;
  height: 4.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #514A7E;
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
  pointer-events: auto;
}

.scroll-top-wrapper {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 1.25rem;
  z-index: 99;
  pointer-events: none;
  visibility: hidden;
  opacity: 0;
  transition: all .2s;
}

.scroll-top-wrapper--visible {
  opacity: 1;
  visibility: visible;
}

.intro-content__right {
  width: 29.75rem;
}

.intro-content__left {
  width: calc(100% - 29.75rem);
  padding-right: 0.8125rem;
}

.intro-img--1 {
  max-width: 17.375rem;
  margin-bottom: 2.625rem;
}

.intro-img--2 {
  max-width: 29.75rem;
}

.intro-img img {
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
}

.intro-title {
  font-weight: 400;
  font-size: 3.75rem;
  line-height: 4.375rem;
  margin-bottom: 2.8125rem;
}

.intro-title span {
  font-weight: normal;
  color: #514A7E;
}

.intro-txt {
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #7D7D7D;
}

.intro-link {
  width: 12.0625rem;
  height: 12.0625rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  font-size: 1.25rem;
  line-height: 1.4375rem;
  display: flex;
  flex-direction: column;
  color: #514A7E;
  margin-left: auto;
  margin-top: -0.3125rem;
  padding-top: 4.875rem;
  padding-left: 2.25rem;
}

.intro-link__icon {
  margin-left: 2.5rem;
}

.intro-link svg {
  width: 4.9375rem;
  height: 0.5rem;
  fill: #514A7E;
}

.intro-link:hover {
  box-shadow: 0px 0.25rem 3.125rem rgba(81, 74, 126, 0.6);
  background: #514A7E;
  color: #FFFDF5;
}

.intro-link:hover svg {
  fill: #FFFDF5;
}

.whywe {
  padding-bottom: 1.75rem;
  position: relative;
}

.whywe::after {
  content: "";
  width: 26.8125rem;
  height: 26.8125rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  top: -14.375rem;
  right: 0;
  transform: translateX(50%);
}

.whywe__title {
  margin-bottom: 5.8125rem;
}

.whywe-list {
  margin-bottom: -5.6875rem;
}

.whywe-list__item {
  margin-bottom: 5.6875rem;
}

.whywe-list__item:nth-child(1) {
  margin-right: 6.9375rem;
}

.whywe-list__item:nth-child(2) {
  margin-right: 6.25rem;
}

.whywe-list__item:nth-child(3) {
  margin-right: 6.25rem;
}

.whywe-list__item:nth-child(5) {
  margin-left: 8.5rem;
  margin-right: 22.625rem;
}

.whywe-item {
  font-size: 0.875rem;
  line-height: 118%;
  color: #7D7D7D;
  position: relative;
}

.whywe-item--1 {
  max-width: 10.9375rem;
}

.whywe-item--1::after {
  width: 1.75rem;
  height: 1.75rem;
  bottom: -0.625rem;
  right: 2.5rem;
}

.whywe-item--2 {
  max-width: 10.9375rem;
}

.whywe-item--3 {
  max-width: 11.5rem;
}

.whywe-item--3::after {
  width: 2.9375rem;
  height: 2.9375rem;
  right: -2rem;
  top: -2rem;
}

.whywe-item--4 {
  max-width: 11.5rem;
}

.whywe-item--5 {
  max-width: 10.9375rem;
}

.whywe-item--5::after {
  width: 2.9375rem;
  height: 2.9375rem;
  right: -1.875rem;
  bottom: -1.875rem;
}

.whywe-item--6 {
  max-width: 11.5rem;
}

.whywe-item--6::after {
  width: 1.75rem;
  height: 1.75rem;
  right: -0.5rem;
  top: -0.5rem;
}

.whywe-item--circle::after {
  content: "";
  border-radius: 50%;
  background: #514A7E;
  box-shadow: 0px 0.25rem 0.625rem rgba(81, 74, 126, 0.4);
  position: absolute;
}

.whywe-card {
  background: #514A7E;
  border-radius: 0.625rem;
  color: #FFFDF5;
  min-height: 4.875rem;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: 0.125rem;
  padding-right: 0.125rem;
  font-weight: 300;
  text-align: center;
  font-size: 0.875rem;
  line-height: 118%;
}

.whywe-mobile {
  display: none;
  align-items: center;
}

.whywe-mobile__left {
  width: 20.375rem;
}

.whywe-mobile__right {
  width: calc(100% - 20.375rem);
  text-align: right;
}

.whywe-btn {
  width: 1.25rem;
  margin-left: auto;
}

.whywe-btn svg {
  fill: #514A7E;
}

.stocks {
  overflow-x: hidden;
}

.stocks-title {
  margin-bottom: 3.75rem;
}

.stocks-head {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 3.5625rem;
}

.stocks-head__title-2 {
  color: #514A7E;
  margin-top: 1.9375rem;
  margin-left: 0.875rem;
}

.stocks-slider {
  overflow: initial;
}

.stocks-slider__item {
  width: 17.375rem;
}

.stocks-slider-wrapper {
  position: relative;
}

.stocks-slider__btn {
  width: 5.3125rem;
  height: 2.9375rem;
  background: #FFFDF5;
  position: absolute;
  z-index: 3;
  transform: translateY(-100%);
  top: 19.9375rem;
}

.stocks-slider__btn img {
  max-width: 2.875rem;
}

.stocks-slider__btn[disabled] {
  opacity: 0;
}

.stocks-slider__prev {
  left: 0;
}

.stocks-slider__next {
  right: 0;
}

.stocks-mobile {
  display: none;
}

.stocks-mobile__foot {
  text-align: center;
}

.stocks-mobile__btn {
  font-size: 0.75rem;
  height: 2.25rem;
  width: 9.25rem;
  padding-left: 1.125rem;
  padding-right: 0;
}

.stocks-mobile__btn img {
  max-width: 1.1875rem;
  margin-left: 0.375rem;
}

.card__img img {
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.2));
  width: 100%;
}

.card__info {
  display: flex;
  padding-top: 0.625rem;
}

.card__info-left {
  width: 65%;
}

.card__info-right {
  width: 40%;
  padding-top: 0.75rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-end;
}

.card__rating {
  display: flex;
}

.card__rating-item {
  width: 0.625rem;
  height: 0.625rem;
  display: flex;
}

.card__rating-item:not(:last-child) {
  margin-right: 0.3125rem;
}

.card__rating-item svg {
  width: 0.625rem;
  height: 0.625rem;
  fill: #514A7E;
}

.card__price {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
}

.card__price-new {
  font-size: 1rem;
  line-height: 1.1875rem;
}

.card__price-old {
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1rem;
  color: #7D7D7D;
  position: relative;
  margin-left: 1.5rem;
}

.card__price-old::before {
  content: "";
  height: 1px;
  left: -0.75rem;
  right: -0.75rem;
  top: 50%;
  display: block;
  background: #7D7D7D;
  position: absolute;
}

.card__title {
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #7D7D7D;
  display: block;
  margin-bottom: 0.5rem;
}

.card__btn {
  width: 9.25rem;
  height: 2.3125rem;
  border: 0.5px solid #121212;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
  line-height: 1rem;
}

.card__btn svg {
  width: 1.5625rem;
  height: 0.25rem;
  margin-left: 0.5rem;
  fill: #121212;
}

.card__btn:hover {
  border-color: #514A7E;
  background: #514A7E;
  color: #FFFDF5;
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
}

.card__btn:hover svg {
  fill: #FFFDF5;
}

.card__controls {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.card__controls-item:not(:last-child) {
  margin-right: 0.9375rem;
}

.catalog-list {
  margin-left: -2.03125rem;
  margin-right: -2.03125rem;
}

.catalog-list__item {
  width: calc(100% / 3);
  padding-left: 2.03125rem;
  padding-right: 2.03125rem;
  margin-bottom: 3.75rem;
}

.reviews__title {
  margin-bottom: 2.5rem;
}

.reviews-content {
  align-items: center;
}

.reviews-content__left {
  width: 62.375rem;
}

.reviews-content__right {
  width: calc(100% - 62.375rem);
}

.reviews-slider {
  margin-left: -1.25rem;
  margin-right: -1.25rem;
}

.reviews-slider__slide {
  padding: 1.25rem;
}

.reviews-slider__pagination {
  display: none;
}

.reviews-btn {
  width: 5.75rem;
  height: 5.75rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  margin-left: auto;
}

.reviews-btn svg {
  width: 2.375rem;
  height: 0.5rem;
  fill: #514A7E;
}

.reviews-card {
  background: #FFFDF5;
  box-shadow: 0px 0.25rem 1.25rem rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  height: 12.75rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 3rem;
  padding-bottom: 2rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.reviews-card__left {
  width: 5.875rem;
  padding-top: 0.375rem;
}

.reviews-card__right {
  width: calc(100% - 5.875rem);
  padding-left: 3rem;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.reviews-card__img img {
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
}

.reviews-card__rating {
  margin-bottom: 0.625rem;
}

.reviews-card__rating-item {
  width: 0.625rem;
  height: 0.625rem;
}

.reviews-card__rating-item:not(:last-child) {
  margin-right: 0.3125rem;
}

.reviews-card__rating-item svg {
  width: 0.625rem;
  height: 0.625rem;
  fill: #514A7E;
}

.reviews-card__txt {
  font-weight: 300;
  color: #7D7D7D;
  margin-bottom: 0.25rem;
}

.reviews-card__group {
  justify-content: space-between;
}

.reviews-card__date {
  color: #514A7E;
}

.reviews-foot {
  margin-top: 0.625rem;
}

.faq {
  position: relative;
}

.faq::after {
  content: "";
  width: 23.75rem;
  height: 23.75rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  top: -14.375rem;
  right: 0;
  transform: translateX(50%);
}

.faq-head {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 3.3125rem;
}

.faq-head__title-2 {
  margin-left: 1.25rem;
  margin-top: 2.25rem;
  color: #514A7E;
  font-weight: 400;
}

.faq-list__item:not(:last-child) {
  margin-bottom: 0.9375rem;
}

.faq-item {
  border-bottom: .5px solid #7D7D7D;
}

.faq-item--opened {
  border-color: transparent;
}

.faq-item__head {
  display: flex;
  padding-bottom: 0.6875rem;
  position: relative;
}

.faq-item__question {
  font-size: 1.25rem;
  line-height: 1.4375rem;
  width: calc(100% - 1.25rem);
  padding-right: 1.25rem;
  padding-top: 0.3125rem;
}

.faq-item__open {
  width: 1.25rem;
}

.faq-item__open::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.faq-item__open[aria-expanded="true"] svg {
  transform: rotate(45deg);
}

.faq-item__txt {
  font-weight: 300;
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #7D7D7D;
  padding-top: 1.875rem;
  padding-bottom: 1.125rem;
}

.cooperation__title {
  margin-bottom: 3.8125rem;
}

.cooperation__txt {
  margin-bottom: 3.125rem;
}

.cooperation-list {
  justify-content: space-between;
  margin-left: -0.625rem;
  margin-right: -0.625rem;
  margin-bottom: 3.5625rem;
}

.cooperation-list__item {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.cooperation-item {
  text-align: center;
}

.cooperation-item__title {
  font-size: 1.25rem;
  line-height: 1.5rem;
  margin-bottom: 1rem;
}

.cooperation-item__txt {
  font-weight: 300;
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #7D7D7D;
}

.cooperation__subtitle {
  font-size: 1.25rem;
  margin-bottom: 4rem;
}

.cooperation-advantages {
  justify-content: space-between;
}

.advantages {
  text-align: center;
}

.advantages__icon {
  max-width: 1.875rem;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 0.625rem;
}

.advantages__txt {
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #7D7D7D;
}

.request {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  position: relative;
}

.request::after {
  content: "";
  width: 23.75rem;
  height: 23.75rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  bottom: -10rem;
  right: 0;
  transform: translateX(50%);
}

.request::before {
  content: "";
  width: 12.5rem;
  height: 12.5rem;
  border-radius: 50%;
  right: 0;
  bottom: 6.75rem;
  background: #514A7E;
  position: absolute;
  transform: translateX(50%);
}

.request-content {
  max-width: 44.625rem;
  width: 100%;
  background: #FFFDF5;
  box-shadow: 0px 0.25rem 1.25rem rgba(51, 51, 51, 0.05);
  position: relative;
  padding-top: 1.75rem;
  padding-left: 3.1875rem;
  padding-bottom: 2.625rem;
}

.request-content::before {
  content: "";
  position: absolute;
  top: -2.5rem;
  bottom: -2.5rem;
  right: -7.625rem;
  left: -200vw;
  background: #514A7E;
  box-shadow: 0px 0.25rem 1.25rem rgba(51, 51, 51, 0.05);
  z-index: -1;
}

.request-title {
  font-size: 1.25rem;
  line-height: 1.5rem;
  margin-bottom: 2rem;
}

.request-form {
  max-width: 14.25rem;
  width: 100%;
  margin-left: 0.4375rem;
}

.request-form__input {
  margin-bottom: 1.5rem;
}

.request-form__input--last {
  margin-bottom: 0;
}

.request-form__consent {
  margin-bottom: 40px;
  margin-top: 0.3125rem;
}

.form-input {
  background: none;
  border: none;
  height: 1.25rem;
  width: 100%;
  display: block;
  border-bottom: 0.5px solid #7D7D7D;
  font-weight: 100;
  font-size: 1rem;
  padding: 0;
}

.form-input::-moz-placeholder {
  color: #7D7D7D;
}

.form-input:-ms-input-placeholder {
  color: #7D7D7D;
}

.form-input::placeholder {
  color: #7D7D7D;
}

.form-consent {
  position: relative;
  display: block;
  cursor: pointer;
}

.form-consent__input {
  display: none;
}

.form-consent__input:checked + .form-consent__txt::before {
  background: #514A7E;
}

.form-consent__txt {
  font-size: 0.75rem;
  line-height: 1;
  color: #7D7D7D;
  display: flex;
  align-items: flex-start;
}

.form-consent__txt::before {
  content: "";
  width: 0.4375rem;
  min-width: 0.4375rem;
  height: 0.4375rem;
  border: 0.5px solid #514A7E;
  border-radius: 50%;
  margin-right: 0.25rem;
  position: relative;
  top: 0.0625rem;
}

.form-btn svg {
  width: 1.57813rem;
  height: 0.25rem;
  fill: #FFFDF5;
  margin-left: 0.5rem;
}

.catalog {
  padding-bottom: 2.8125rem;
  position: relative;
}

.catalog::after {
  content: "";
  width: 26.8125rem;
  height: 26.8125rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  right: 0;
  top: 0;
  transform: translateX(50%);
  z-index: -1;
}

.catalog-breadcrumbs {
  margin-bottom: 3.75rem;
}

.catalog-sorting {
  margin-bottom: 3.75rem;
  display: flex;
  font-size: 1rem;
  line-height: 1.4375rem;
}

.catalog-sorting__txt {
  color: #7D7D7D;
  margin-right: 2.1875rem;
}

.catalog-content {
  display: flex;
  flex-wrap: wrap;
}

.catalog-content__left {
  width: calc(100% - 60.625rem);
  padding-right: 1.25rem;
}

.catalog-content__right {
  width: 60.625rem;
}

.catalog-filter__group {
  position: relative;
}

.catalog-filter__group:not(:last-child) {
  margin-bottom: 1.875rem;
}

.catalog-filter__title {
  font-size: 1rem;
  line-height: 1.4375rem;
  cursor: pointer;
  position: relative;
  z-index: 3;
}

.catalog-filter__title svg {
  fill: #514A7E;
  margin-left: 0.125rem;
}

.catalog-filter__title[aria-expanded="true"] svg {
  transform: rotate(180deg);
}

.catalog-filter__range {
  margin-top: 1.25rem;
  max-width: 8.625rem;
}

.catalog-filter__range-inner {
  display: flex;
  justify-content: space-between;
  font-weight: 300;
  font-size: 0.625rem;
  line-height: 0.75rem;
  color: #7D7D7D;
  margin-bottom: 0.25rem;
}

.catalog-filter__dropdown {
  padding-top: 0.75rem;
}

.catalog-filter__colors {
  display: flex;
  flex-wrap: wrap;
  max-width: 9.375rem;
  padding-top: 0.75rem;
}

.catalog-filter__colors-input {
  display: none;
}

.catalog-filter__colors-label {
  display: block;
  cursor: pointer;
}

.catalog-filter__colors-item {
  margin-right: 0.625rem;
  margin-bottom: 0.625rem;
}

.catalog-filter__colors-circle {
  width: 1.25rem;
  height: 1.25rem;
  display: block;
  border-radius: 50%;
}

.catalog-filter__colors-circle.color-white {
  border: 0.1px solid #333333;
  background: #FFFFFF;
}

.catalog-filter__colors-circle.color-black {
  background: #000000;
}

.catalog-filter__colors-circle.color-red {
  background: #A61F1F;
}

.catalog-filter__colors-circle.color-green {
  background: #3D7B52;
}

.catalog-filter__colors-circle.color-yellow {
  background: #EAD943;
}

.catalog-filter__colors-circle.color-blue {
  background: #296297;
}

.catalog-filter__colors-circle.color-gray {
  background: #C4C4C4;
}

.catalog-more {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
  width: 8.25rem;
  height: 8.25rem;
  border: 1px solid #514A7E;
  border-radius: 50%;
  font-size: 1.25rem;
  color: #514A7E;
}

.catalog-more svg {
  height: 1.4375rem;
  width: 0.5rem;
  fill: #514A7E;
  margin-left: 0.1875rem;
}

.catalog-more:hover {
  filter: drop-shadow(0px 4px 50px rgba(81, 74, 126, 0.6));
  background: #514A7E;
  color: #FFFDF5;
}

.catalog-more:hover svg {
  fill: #FFFDF5;
}

.catalog-mobile {
  padding: 1.25rem 0.625rem;
  background: #514A7E;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 99;
  display: none;
}

.catalog-mobile__inner {
  display: flex;
  align-items: center;
}

.catalog-mobile__back svg {
  fill: #FFFDF5;
}

.catalog-mobile__filter {
  margin-left: 1.125rem;
}

.catalog-mobile__filter svg {
  fill: #FFFDF5;
}

.catalog-mobile__sorting {
  margin-left: 1.5rem;
}

.catalog-mobile__sorting svg {
  fill: #FFFDF5;
}

.catalog-mobile__menu {
  margin-left: auto;
  display: flex;
}

.catalog-mobile__menu-item {
  font-size: 0.875rem;
  line-height: 1rem;
  color: #FFFDF5;
}

.catalog-mobile__menu-link {
  color: rgba(255, 253, 245, 0.4);
  display: inline-flex;
}

.catalog-mobile__menu-link::after {
  content: "/";
  margin: 0 0.25rem;
}

.sorting {
  display: flex;
  flex-wrap: wrap;
}

.sorting-label:not(:last-child) {
  margin-right: 2.1875rem;
}

.cart {
  position: relative;
}

.cart::after {
  content: "";
  width: 26.8125rem;
  height: 26.8125rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  right: 0;
  bottom: -8.75rem;
  transform: translateX(50%);
}

.cart-head {
  display: flex;
  align-items: flex-end;
  margin-bottom: 3.75rem;
}

.cart-head__title {
  margin-left: 3rem;
}

.cart-head__count {
  margin-left: 0.75rem;
}

.cart-back {
  width: 2.6875rem;
  height: 2.6875rem;
  border-radius: 50%;
  background: #514A7E;
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.4));
}

.cart-back svg {
  fill: #FFFDF5;
  width: 1.0625rem;
  height: 0.5rem;
}

.cart-count {
  width: 2.125rem;
  height: 2.125rem;
  position: relative;
}

.cart-count svg {
  width: 2.125rem;
  height: 2.125rem;
  fill: #121212;
}

.cart-count span {
  position: absolute;
  top: 0;
  left: 100%;
  font-size: 1rem;
  color: #514A7E;
}

.cart-title {
  margin-bottom: 0;
}

.cart-body {
  max-width: 54.625rem;
}

.cart-list {
  margin-bottom: 3rem;
}

.cart-list__item:not(:last-child) {
  margin-bottom: 3.75rem;
}

.cart-item {
  display: flex;
}

.cart-item__img img {
  width: 100%;
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.2));
}

.cart-item__left {
  width: 11.125rem;
}

.cart-item__right {
  width: calc(100% - 11.125rem);
  padding-left: 3.125rem;
  display: flex;
  justify-content: space-between;
}

.cart-item__right-col-2 .cart-item__actions-link {
  display: none;
}

.cart-item__price {
  margin-bottom: 4.125rem;
}

.cart-item__price-title {
  font-size: 1.25rem;
  line-height: 1.4375rem;
  margin-bottom: 1rem;
}

.cart-item__price-value {
  font-size: 2.5rem;
  line-height: 118%;
  color: #514A7E;
}

.cart-item__link {
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1.0625rem;
  color: #514A7E;
}

.cart-item__link svg {
  width: 0.6875rem;
  height: 0.5rem;
  fill: #514A7E;
}

.cart-item__title {
  display: flex;
  align-items: flex-end;
  flex-wrap: wrap;
  margin-bottom: 1.3125rem;
}

.cart-item__name {
  font-size: 1.25rem;
  line-height: 1.5rem;
  margin-right: 0.875rem;
}

.cart-item__art {
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1.0625rem;
  color: #7D7D7D;
}

.cart-item__info {
  display: flex;
  flex-wrap: wrap;
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1.0625rem;
  margin-bottom: 1.625rem;
  color: #7D7D7D;
}

.cart-item__info-item:not(:last-child) {
  margin-right: 20px;
}

.cart-item__counter {
  margin-bottom: 2rem;
}

.cart-item__actions {
  display: flex;
  flex-wrap: wrap;
}

.cart-item__actions-link {
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1.0625rem;
  display: inline-flex;
  align-items: center;
}

.cart-item__actions-link:not(:last-child) {
  margin-right: 1.875rem;
}

.cart-item__actions-link svg {
  margin-right: 0.5rem;
}

.cart-item__mobile {
  display: none;
  justify-content: space-between;
  align-items: center;
}

.cart-total {
  display: flex;
  align-items: baseline;
  margin-bottom: 3rem;
}

.cart-total__txt {
  font-size: 1.25rem;
  margin-right: 0.75rem;
}

.cart-total__value {
  font-size: 2.5rem;
  color: #514A7E;
  margin-right: 3.125rem;
}

.cart-total__count {
  font-weight: 300;
  font-size: 0.875rem;
  color: #7D7D7D;
}

.cart-form__btn {
  width: 9.375rem;
  height: 2.3125rem;
  margin-bottom: 0.625rem;
}

.cart-mobile {
  background: #514A7E;
  padding: 1.25rem;
  text-align: center;
  font-weight: 300;
  font-size: 1.25rem;
  color: #FFFDF5;
  display: none;
  margin-bottom: 1.125rem;
}

.count {
  width: 7rem;
  height: 2rem;
  display: flex;
}

.count__btn {
  width: 2rem;
}

.count__btn svg {
  fill: #514A7E;
}

.count__minus svg {
  width: 1.25rem;
  height: 1.25rem;
}

.count__plus svg {
  width: 2rem;
  height: 2rem;
}

.count__input {
  border: none;
  height: 100%;
  font-size: 1.25rem;
  padding: 0;
  color: #514A7E;
  text-align: center;
  background: transparent;
  width: 3rem;
}

.product {
  position: relative;
}

.product::after {
  content: "";
  width: 26.8125rem;
  height: 26.8125rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  right: 0;
  bottom: -15rem;
  transform: translateX(50%);
}

.product-head {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
  margin-bottom: 3.75rem;
}

.product-head__back {
  margin-right: 3.5rem;
}

.product-title {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
  margin-bottom: 3.75rem;
}

.product-title h1 {
  margin-bottom: 0;
  margin-right: 0.75rem;
}

.product-art {
  font-size: 1rem;
  line-height: 1.4375rem;
  color: #7D7D7D;
}

.product-content {
  display: flex;
  flex-wrap: wrap;
}

.product-content__left {
  width: 35.9375rem;
}

.product-content__right {
  width: calc(100% - 35.9375rem);
  padding-left: 7.1875rem;
}

.product-gallery {
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.2));
  margin-bottom: 2.5rem;
  position: relative;
}

.product-gallery__btn {
  position: absolute;
  z-index: 3;
  bottom: 0;
  width: 5.3125rem;
  height: 2.9375rem;
  background: #FFFDF5;
}

.product-gallery__btn img {
  width: 2.875rem;
}

.product-gallery__btn[disabled] {
  display: none;
}

.product-gallery__prev {
  left: 0;
}

.product-gallery__next {
  right: 0;
}

.product-gallery__pagination {
  display: none;
  margin-top: 0.625rem;
}

.product-thumbs {
  position: relative;
}

.product-thumbs__btn {
  position: absolute;
  z-index: 3;
  bottom: 1.25rem;
  width: 2.625rem;
  height: 1.5rem;
  background: #FFFDF5;
}

.product-thumbs__btn img {
  width: 1.5rem;
}

.product-thumbs__btn[disabled] {
  display: none;
}

.product-thumbs__prev {
  left: 0;
}

.product-thumbs__next {
  right: 0;
}

.product-thumbs__slide {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.product-thumbs__img img {
  filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.2));
  width: 100%;
}

.product-price__value {
  font-weight: 300;
  font-size: 2rem;
  margin-bottom: 2rem;
}

.product-price__title {
  display: none;
}

.product-group-title {
  font-size: 1rem;
  line-height: 1.4rem;
  margin-bottom: 1rem;
}

.product-colors {
  margin-bottom: 2.1875rem;
}

.product-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: -0.625rem;
}

.product-colors__link {
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 0.625rem;
  margin-bottom: 0.625rem;
  display: block;
  border-radius: 50%;
}

.product-colors__link--black {
  background: #000;
}

.product-colors__link--green {
  background: #1FA68E;
}

.product-colors__link--purp {
  background: #DC39CC;
}

.product-colors__link--yellow {
  background: #FFF385;
}

.product-colors__link--white {
  border: 0.3px solid #121212;
  background: #FFFFFF;
}

.product-size {
  margin-bottom: 2.4375rem;
}

.product-size__list {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 0.1875rem;
}

.product-size__item {
  margin-right: 0.875rem;
  margin-bottom: 0.875rem;
  border: 0.3px solid #514A7E;
  width: 1.875rem;
  height: 1.875rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  font-weight: 300;
  cursor: pointer;
}

.product-size__item-value {
  font-size: 1rem;
  color: #514A7E;
  margin-bottom: -0.75rem;
}

.product-size__item-number {
  font-size: 0.5rem;
  color: #7D7D7D;
}

.product-link {
  display: inline-block;
  font-size: 1rem;
  line-height: 1.4rem;
  color: #514A7E;
  border-bottom: 1px solid #514A7E;
}

.product-link--hidden {
  display: none;
}

.product-link:hover {
  border-color: transparent;
}

.product-actions {
  display: flex;
  align-items: center;
  margin-bottom: 2rem;
}

.product-cart {
  width: 9.25rem;
  height: 2.3125rem;
  padding: 0;
  margin-right: 1.25rem;
}

.product-cart--hidden {
  display: none;
}

.product-cart svg {
  fill: #FFFDF5;
  margin-left: 0.25rem;
}

.product-favorite svg {
  width: 1rem;
  height: 1rem;
  fill: #514A7E;
}

.product-rating {
  margin-bottom: 2.25rem;
}

.product-rating__list {
  display: flex;
  margin-bottom: 1rem;
}

.product-rating__star {
  margin-right: 0.625rem;
}

.product-rating__star svg {
  width: 1.25rem;
  height: 1.25rem;
  fill: #514A7E;
}

.product-desc__title {
  font-size: 1.25rem;
  line-height: 1.4375rem;
  margin-bottom: 0.8125rem;
}

.product-mobile-title {
  display: none;
  align-items: flex-end;
  margin-bottom: 1.3125rem;
}

.product-mobile-title__txt {
  font-size: 0.875rem;
  line-height: 1.0625rem;
  margin-right: 0.5rem;
}

.product-mobile-title__art {
  font-weight: 300;
  font-size: 0.625rem;
  line-height: 0.75rem;
  color: #7D7D7D;
}

.product-mobile {
  background: #514A7E;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  padding: 1.125rem 0.625rem;
  color: #FFFDF5;
  font-size: 0.875rem;
  line-height: 1.25rem;
  display: none;
  z-index: 99;
}

.product-mobile__inner {
  display: flex;
  align-items: center;
}

.product-mobile__col {
  flex: 1 0 0%;
}

.product-mobile__link {
  width: 1.25rem;
  display: flex;
  margin-left: auto;
}

.product-mobile__link svg {
  fill: #FFFDF5;
}

.product-mobile__title {
  text-align: center;
}

.product-mobile__back {
  display: flex;
  align-items: center;
}

.product-mobile__back svg {
  fill: #FFFDF5;
  margin-right: 1px;
}

.order {
  padding-bottom: 4.25rem;
  position: relative;
}

.order::after {
  content: "";
  width: 26.8125rem;
  height: 26.8125rem;
  border-radius: 50%;
  border: 1px solid #514A7E;
  position: absolute;
  right: 0;
  bottom: 0;
  transform: translate3d(50%, 50%, 0);
}

.order-title {
  margin-bottom: 0;
}

.order-head {
  margin-bottom: 3.75rem;
}

.order-mobile {
  background: #514A7E;
  padding: 1.25rem;
  text-align: center;
  font-weight: 300;
  font-size: 1.25rem;
  color: #FFFDF5;
  display: none;
  margin-bottom: 1.125rem;
}

.orderForm__group {
  margin-bottom: 3.75rem;
}

.orderForm__title {
  font-size: 1.25rem;
  line-height: 87.3%;
  margin-bottom: 2.5rem;
}

.orderForm__row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -3.75rem;
  margin-right: -3.75rem;
}

.orderForm__col {
  width: 50%;
  padding-left: 3.75rem;
  padding-right: 3.75rem;
}

.orderForm__input {
  display: block;
  width: 100%;
  height: 0.9375rem;
  border: none;
  border-bottom: .5px solid #7D7D7D;
  font-size: 1rem;
  font-weight: 300;
  margin-bottom: 1.875rem;
  background: none;
  padding: 0;
}

.orderForm__input::-moz-placeholder {
  color: #7D7D7D;
}

.orderForm__input:-ms-input-placeholder {
  color: #7D7D7D;
}

.orderForm__input::placeholder {
  color: #7D7D7D;
}

.orderForm__textarea {
  box-shadow: 0px 4px 10px rgba(81, 74, 126, 0.2);
  background: none;
  display: block;
  width: 100%;
  height: 90px;
  border: none;
  font-weight: 300;
  font-size: 1rem;
  padding-top: 0.375rem;
  padding-left: 0.5rem;
}

.orderForm__textarea::-moz-placeholder {
  color: #7D7D7D;
}

.orderForm__textarea:-ms-input-placeholder {
  color: #7D7D7D;
}

.orderForm__textarea::placeholder {
  color: #7D7D7D;
}

.orderForm__foot {
  margin-top: -4rem;
}

.orderForm__consent {
  margin-bottom: 1.25rem;
}

.orderForm__btn {
  font-size: 0.875rem;
  width: 9.25rem;
  height: 2.3125rem;
  padding: 0;
}

.orderForm__btn svg {
  width: 1.5625rem;
  height: 0.25rem;
  margin-left: 0.5rem;
  fill: #FFFDF5;
}

.orderForm-radio {
  display: flex;
  flex-wrap: wrap;
}

.orderForm-radio__col {
  flex: 1 0 0%;
}

.orderForm-radio__label {
  display: block;
  cursor: pointer;
}

.orderForm-radio__label-input {
  display: none;
}

.orderForm-radio__label-input:checked + .orderForm-radio__label-txt::before {
  background: #514A7E;
}

.orderForm-radio__label-txt {
  font-size: 1rem;
  line-height: 1.1875rem;
  color: #514A7E;
  display: flex;
}

.orderForm-radio__label-txt::before {
  content: "";
  width: 0.875rem;
  height: 0.875rem;
  min-width: 0.875rem;
  border-radius: 50%;
  margin-right: 0.9375rem;
  border: 1px solid #514A7E;
  position: relative;
  top: 0.125rem;
}

.orderForm-radio__txt {
  margin-top: 1.25rem;
  font-weight: 300;
  font-size: 0.75rem;
  line-height: 0.875rem;
  color: #7D7D7D;
}

.orderForm-radio__txt a {
  color: #514A7E;
  font-weight: normal;
}

.orderForm-confirm {
  margin-left: auto;
  margin-right: auto;
}

.header {
  flex: 0 0 auto;
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.header__content {
  align-items: center;
}

.header__actions {
  margin-left: auto;
  display: flex;
}

.header__controls {
  margin-left: 2.5rem;
}

.open-menu svg {
  width: 2.25rem;
  height: 2.25rem;
}

.controls__item:not(:last-child) {
  margin-right: 0.9375rem;
}

.search-form {
  display: flex;
  align-items: center;
}

.search-form__btn {
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 1.25rem;
}

.search-form__btn .icon-m-search {
  display: none;
}

.search-form__input {
  border: none;
  width: 19.25rem;
  height: 1.25rem;
  border-bottom: .5px solid #7D7D7D;
  font-weight: 200;
  font-size: 0.75rem;
  background: transparent;
}

.search-form__input::-moz-placeholder {
  color: #7D7D7D;
}

.search-form__input:-ms-input-placeholder {
  color: #7D7D7D;
}

.search-form__input::placeholder {
  color: #7D7D7D;
}

.leftPanel {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  background: #121212;
  box-shadow: 0px 0.25rem 1.25rem rgba(51, 51, 51, 0.05);
  z-index: 109;
  color: #FFFDF5;
  transition: transform .2s;
  transform: translateX(-101%);
}

.leftPanel--open {
  transform: translateX(0);
}

.leftPanel-head {
  background: #514A7E;
  padding: 0.9375rem 0.625rem;
  display: none;
}

.leftPanel-title {
  text-align: center;
  font-weight: 300;
  font-size: 1.25rem;
  line-height: 87.3%;
  color: #FFFDF5;
  margin-bottom: 1rem;
}

.leftPanel-inner {
  display: flex;
  height: 100%;
}

.leftPanel-left {
  width: 12.1875rem;
  height: 100%;
  background: #121212;
}

.leftPanel-logo {
  width: 7.375rem;
}

.dropdown-menu {
  width: 12.1875rem;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 100%;
  background: #121212;
  display: none;
  padding-top: 7.375rem;
  transition: opacity .5s ease;
  opacity: 1;
}

.menu__item--active .dropdown-menu {
  display: block;
}


.dropdown-menu--open {
  visibility: visible;
  z-index: 1;
  pointer-events: initial;
  transform: translateX(0);
}

.menu__item {
  padding-left: 1.125rem;
}

.menu__item:not(:last-child) {
  margin-bottom: 1.25rem;
}



.menu__link {
  display: inline-block;
  font-weight: 300;
  font-size: 0.875rem;
  line-height: 1rem;
  transition: 0s;
}


.bottomPanel {
  position: fixed;
  z-index: 9999;
  left: 0;
  right: 0;
  bottom: 0;
  display: none;
}

.bottomPanel--active .bottomPanel-category {
  transform: translateY(100%);
  visibility: hidden;
}

.bottomPanel-cart {
  border: 1px solid #FFFDF5;
  background: #514A7E;
  color: #FFFDF5;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 2.125rem;
}

.bottomPanel-category {
  background: #FFFDF5;
  box-shadow: 0px 4px 10px rgba(81, 74, 126, 0.2);
  border-radius: 0.625rem 0.625rem 0 0;
  transition: all .2s;
  display: flex;
}

.bottomPanel-category__item {
  width: calc(100% / 3);
}

.bottomPanel-category__link {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2.1875rem;
  text-align: center;
  font-weight: 300;
  font-size: 0.75rem;
  line-height: 0.875rem;
  color: #7D7D7D;
}

.bottomPanel-category__link--selected {
  background: #FFFDF5;
  box-shadow: 0px 4px 10px rgba(81, 74, 126, 0.2);
  border-radius: 0.625rem 0.625rem 0 0;
}

.bottomPanel-menu {
  display: flex;
  height: 4rem;
  background: #514A7E;
  position: relative;
  z-index: 3;
}

.bottomPanel-menu__item {
  width: 20%;
  padding-top: 1.375rem;
}

.bottomPanel-menu__link {
  display: inline-flex;
  justify-content: center;
  width: 100%;
}

.bottomPanel-menu__link svg {
  width: 1.5625rem;
  height: 1.5625rem;
  fill: #FFFDF5;
}

.footer {
  flex: 0 0 auto;
  background: #514A7E;
  color: #FFFDF5;
  padding-top: 4.8125rem;
  padding-bottom: 6.0625rem;
}

.footer__logo {
  align-self: flex-end;
}

.footer-group {
  margin-right: 4.375rem;
}

.footer-title {
  font-size: 1.25rem;
  line-height: 1.4375rem;
  margin-bottom: 0.9375rem;
}

.footer-title svg {
  display: none;
}

.footer-menu__item {
  font-size: 1rem;
  line-height: 1.1875rem;
}

.footer-menu__item:not(:last-child) {
  margin-bottom: 0.5625rem;
}

.footer-txt {
  font-size: 1rem;
  line-height: 1.1875rem;
  max-width: 15.625rem;
  margin-top: 1.375rem;
}

.footer-social {
  align-items: center;
  margin-bottom: 1.5625rem;
}

.footer-social__item:not(:last-child) {
  margin-right: 0.9375rem;
}

.footer-social__link svg {
  fill: #FFFDF5;
}

.footer-social__link .icon-social-1 {
  width: 1.25rem;
  height: 1.25rem;
}

.footer-social__link .icon-social-2 {
  width: 1.25rem;
  height: 1.25rem;
}

.footer-social__link .icon-social-3 {
  width: 1.4375rem;
  height: 1.25rem;
}

.footer-social__link .icon-social-4 {
  width: 1.25rem;
  height: 1.3125rem;
}

.footer-info__item {
  display: flex;
  align-items: center;
  font-weight: 300;
  font-size: 1rem;
  line-height: 1;
}

.footer-info__item:not(:last-child) {
  margin-bottom: 1.25rem;
}

.footer-info__item-icon {
  width: 1.25rem;
}

.footer-info__item-txt {
  width: calc(100% - 1.25rem);
  padding-left: 0.625rem;
}

@media (min-width: 576px) {
  .modal-dialog {
    max-width: 500px;
    margin: 1.75rem auto;
  }

  .modal-dialog-scrollable {
    height: calc(100% - 3.5rem);
  }

  .modal-dialog-centered {
    min-height: calc(100% - 3.5rem);
  }

  .modal-sm {
    max-width: 300px;
  }
}

@media (min-width: 992px) {
  .modal-lg,
  .modal-xl {
    max-width: 800px;
  }
}

@media (min-width: 1200px) {
  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.75rem;
  }

  h4 {
    font-size: 1.5rem;
  }

  legend {
    font-size: 1.5rem;
  }

  .modal-xl {
    max-width: 1140px;
  }
}

@media (max-width: 1399.98px) {
  .modal-fullscreen-xxl-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }

  .modal-fullscreen-xxl-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }

  .modal-fullscreen-xxl-down .modal-header {
    border-radius: 0;
  }

  .modal-fullscreen-xxl-down .modal-body {
    overflow-y: auto;
  }

  .modal-fullscreen-xxl-down .modal-footer {
    border-radius: 0;
  }
}

@media (max-width: 1199.98px) {
  .modal-fullscreen-xl-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }

  .modal-fullscreen-xl-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }

  .modal-fullscreen-xl-down .modal-header {
    border-radius: 0;
  }

  .modal-fullscreen-xl-down .modal-body {
    overflow-y: auto;
  }

  .modal-fullscreen-xl-down .modal-footer {
    border-radius: 0;
  }
}

@media (max-width: 1199px) {
  .footer-group {
    margin-right: 4.375rem;
  }
}

@media (max-width: 991.98px) {
  .modal-fullscreen-lg-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }

  .modal-fullscreen-lg-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }

  .modal-fullscreen-lg-down .modal-header {
    border-radius: 0;
  }

  .modal-fullscreen-lg-down .modal-body {
    overflow-y: auto;
  }

  .modal-fullscreen-lg-down .modal-footer {
    border-radius: 0;
  }
}

@media (max-width: 767.98px) {
  .modal-fullscreen-md-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }

  .modal-fullscreen-md-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }

  .modal-fullscreen-md-down .modal-header {
    border-radius: 0;
  }

  .modal-fullscreen-md-down .modal-body {
    overflow-y: auto;
  }

  .modal-fullscreen-md-down .modal-footer {
    border-radius: 0;
  }
}

@media (max-width: 767px) {
  .section {
    margin-top: 3.75rem;
    margin-bottom: 3.75rem;
    overflow-x: hidden;
  }

  .section-title {
    font-size: 1.5625rem;
    text-align: center;
  }

  .mobile {
    display: block;
  }

  .desctop {
    display: none;
  }

  .content--inner {
    padding-top: 0;
  }

  .txt,
  p {
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .modal-dialog {
    width: auto  !important;
    max-width: initial !important;
  }

  .modal-back {
    top: 0.625rem;
    left: 0.625rem;
  }

  .modal-close {
    left: initial;
    right: 0.625rem;
  }

  .modal-size {
    padding: 1.25rem;
  }

  .modal-size::after {
    display: none;
  }

  .modal-size__title {
    font-size: 1.25rem;
    line-height: normal;
    margin-bottom: 1.875rem;
  }

  .modal-thanks {
    padding-left: 0.625rem;
    padding-right: 0.625rem;
  }

  .modal-thanks::after {
    display: none;
  }

  .modal-thanks__decor {
    display: none;
  }

  .modal-thanks__title {
    font-size: 1.25rem;
    line-height: normal;
  }

  .modal-thanks__title span {
    position: initial;
  }

  .modal-thanks__txt {
    font-size: 0.875rem;
    line-height: 1rem;
  }

  html {
    height: auto;
  }

  body {
    height: auto;
  }

  .wrapper {
    min-height: 100vh;
  }

  .scroll-top {
    width: 1.8125rem;
    margin-left: auto;
    height: 1.8125rem;
  }

  .scroll-top-wrapper {
    text-align: right;
    bottom: 7.5rem;
  }

  .intro {
    background: url(../images/general/intro-bg.jpg) top 0px center no-repeat;
    margin-top: -3.5625rem;
    padding-top: 12.9375rem;
    padding-bottom: 17.375rem;
    background-size: cover;
  }

  .intro-img {
    display: none;
  }

  .intro-content__left {
    width: 100%;
    padding-right: 0;
  }

  .intro-content__right {
    width: 100%;
  }

  .intro-title {
    font-size: 2.3125rem;
    line-height: 2.875rem;
    color: #FFFDF5;
    text-align: center;
    font-weight: normal;
    margin-bottom: 1.375rem;
  }

  .intro-title span {
    color: #FFFDF5;
  }

  .intro-txt {
    text-align: center;
    font-size: 0.875rem;
    line-height: 118%;
    font-weight: normal;
    color: #FFFDF5;
    margin-bottom: 2rem;
  }

  .intro-link {
    margin-left: auto;
    margin-right: auto;
    width: 8.4375rem;
    height: 8.4375rem;
    box-shadow: 5px 5px 80px rgba(0, 0, 0, 0.8);
    background: #514A7E;
    color: #FFFDF5;
    font-weight: 500;
    font-size: 1rem;
    padding-top: 3.125rem;
    padding-left: 1.5rem;
  }

  .intro-link svg {
    fill: #FFFDF5;
    width: 3.125rem;
    height: 0.45313rem;
  }

  .intro-link__icon {
    position: relative;
    top: -0.25rem;
  }

  .whywe {
    padding-bottom: 0;
  }

  .whywe::after {
    display: none;
  }

  .whywe-list {
    display: none;
  }

  .whywe-mobile {
    display: flex;
  }

  .whywe__title {
    margin-bottom: 1.75rem;
  }

  .stocks-title {
    margin-bottom: 1.875rem;
  }

  .stocks-slider-wrapper {
    display: none;
  }

  .stocks-slider-wrapper--inner {
    display: block;
  }

  .stocks-head {
    justify-content: center;
  }

  .stocks-head__title-2 {
    margin-top: 1.5rem;
    margin-left: 0;
  }

  .stocks-mobile {
    display: block;
  }

  .stocks-slider {
    overflow: initial;
  }

  .stocks-slider__btn {
    display: none;
  }

  .stocks-slider__item {
    width: 8.0625rem;
  }

  .stocks-slider__item .card__img img {
    filter: drop-shadow(0px 4px 10px rgba(81, 74, 126, 0.2));
  }

  .stocks-slider__item .card__info {
    display: none;
  }

  .catalog-list {
    margin-left: -1.71875rem;
    margin-right: -1.71875rem;
  }

  .catalog-list__item {
    width: 50%;
    padding-left: 1.71875rem;
    padding-right: 1.71875rem;
    margin-bottom: 1.875rem;
  }

  .card {
    position: relative;
  }

  .card__img img {
    border-radius: 0.625rem;
  }

  .card__info {
    flex-wrap: wrap;
    padding-top: 1.1875rem;
  }

  .card__info-left {
    width: 100%;
  }

  .card__info-right {
    width: 100%;
    padding-top: 0;
    flex-direction: column-reverse;
  }

  .card__btn {
    display: none;
  }

  .card__title {
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .card__title::before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }

  .card__controls {
    margin-top: -1.3125rem;
  }

  .card__controls-item:not(:last-child) {
    margin: 0;
  }

  .card__controls-item:first-child {
    position: absolute;
    top: 0.375rem;
    right: 0.5rem;
    width: 1rem;
    height: 1rem;
    display: flex;
  }

  .card__controls-item:first-child svg {
    width: 1rem;
    height: 1rem;
  }

  .card__rating {
    justify-content: flex-start;
    width: 100%;
  }

  .reviews {
    overflow-x: hidden;
  }

  .reviews__title {
    text-align: center;
    margin-bottom: 1.75rem;
  }

  .reviews-content__left {
    width: 100%;
  }

  .reviews-content__right {
    width: 100%;
    display: none;
  }

  .reviews-slider {
    margin-left: 0;
    margin-right: 0;
    overflow: initial;
  }

  .reviews-slider__slide {
    padding: 0;
    width: 13.5rem;
    padding-bottom: 1.875rem;
    height: initial;
  }

  .reviews-slider__pagination {
    display: flex;
  }

  .reviews-card {
    padding: 0.6875rem 0.8125rem 0.625rem 0.75rem;
    align-items: center;
    height: auto;
    height: 100%;
  }

  .reviews-card__left {
    width: 2.1875rem;
    padding-top: 0;
  }

  .reviews-card__right {
    width: calc(100% - 2.1875rem);
    padding-left: 0.625rem;
  }

  .reviews-card__rating {
    margin-bottom: 0.625rem;
  }

  .reviews-card__txt {
    font-size: 0.75rem;
    line-height: 130%;
    letter-spacing: -0.045em;
    margin-bottom: 0.5625rem;
  }

  .reviews-card__group {
    font-size: 0.625rem;
    line-height: 170%;
  }

  .reviews-foot {
    display: none;
  }

  .faq::after {
    display: none;
  }

  .faq-head {
    flex-direction: column;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    padding-left: 0.25rem;
    margin-bottom: 2.125rem;
  }

  .faq-head__title-2 {
    margin-left: auto;
    margin-top: 1.125rem;
  }

  .faq-list__item:not(:last-child) {
    margin-bottom: 1.125rem;
  }

  .faq-item__head {
    align-items: center;
    padding-bottom: 1px;
  }

  .faq-item__question {
    font-size: 0.75rem;
    line-height: 0.875rem;
    font-weight: 300;
    padding-top: 0;
  }

  .faq-item__open {
    width: 1.0625rem;
    height: 1.0625rem;
  }

  .faq-item__open svg {
    width: 1.0625rem;
    height: 1.0625rem;
  }

  .faq-item__txt {
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .cooperation__title {
    text-align: center;
    margin-bottom: 1.875rem;
  }

  .cooperation__txt {
    text-align: center;
    font-size: 0.75rem;
    line-height: 118%;
    margin-bottom: 1.875rem;
  }

  .cooperation-list {
    margin-left: -0.78125rem;
    margin-right: -0.78125rem;
    margin-bottom: 1.875rem;
  }

  .cooperation-list__item {
    width: 50%;
    padding-left: 0.78125rem;
    padding-right: 0.78125rem;
    margin-bottom: 1.875rem;
  }

  .cooperation-item {
    background: #514A7E;
    box-shadow: 0px 4px 10px rgba(81, 74, 126, 0.4);
    border-radius: 0.625rem;
    min-height: 4.875rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cooperation-item__txt {
    display: none;
  }

  .cooperation-item__title {
    margin-bottom: 0;
    font-size: 0.75rem;
    line-height: 118%;
    color: #FFFDF5;
  }

  .cooperation__subtitle {
    text-align: center;
    font-weight: 300;
    font-size: 1.5625rem;
    margin-bottom: 2rem;
  }

  .cooperation__subtitle span {
    display: none;
  }

  .cooperation-advantages {
    flex-direction: column;
  }

  .cooperation-advantages__item:not(:last-child) {
    margin-bottom: 2.375rem;
  }

  .request {
    background: #514A7E;
    padding-top: 2.1875rem;
    padding-bottom: 2.1875rem;
    margin-top: 0;
    margin-bottom: 0;
  }

  .request::after {
    display: none;
  }

  .request::before {
    display: none;
  }

  .request-content {
    padding: 2.0625rem;
  }

  .request-content::before {
    display: none;
  }

  .request-title {
    font-size: 0.75rem;
    line-height: 118%;
    text-align: center;
    margin-bottom: 1.4375rem;
  }

  .request-form {
    margin-left: auto;
    margin-right: auto;
  }

  .request-form__input {
    text-align: center;
    font-size: 0.625rem;
    margin-bottom: 1rem;
  }

  .request-form__input--last {
    margin-bottom: 0;
  }

  .request-form__consent {
    margin-bottom: 1.875rem;
  }

  .request-form__button {
    text-align: center;
  }

  .sorting {
    flex-direction: column;
  }

  .sorting-label:not(:last-child) {
    margin-right: 0;
    margin-bottom: 1.25rem;
  }

  .catalog {
    padding-top: 5.125rem;
  }

  .catalog::after {
    display: none;
  }

  .catalog-breadcrumbs {
    display: none;
  }

  .catalog-mobile {
    display: block;
  }

  .catalog-sorting {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 80;
    background: #FFFDF5;
    padding: 5.125rem 0.625rem;
    overflow: auto;
    transform: translateX(-100%);
    transition: all .2s;
    flex-direction: column;
  }

  .catalog-sorting__txt {
    margin-bottom: 1.25rem;
  }

  .catalog-sorting--open {
    transform: translateX(0);
  }

  .catalog .content-title {
    display: none;
  }

  .catalog-content__left {
    width: 100%;
    padding-right: 0;
  }

  .catalog-content__right {
    width: 100%;
  }

  .catalog-filter {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 80;
    background: #FFFDF5;
    padding: 5.125rem 0.625rem;
    overflow: auto;
    transform: translateX(-100%);
    transition: all .2s;
  }

  .catalog-filter--open {
    transform: translateX(0);
  }

  .cart::after {
    display: none;
  }

  .cart-head {
    display: none;
  }

  .cart-mobile {
    display: block;
  }

  .cart-list__item:not(:last-child) {
    margin-bottom: 1.875rem;
  }

  .cart-item {
    padding: 1.5625rem 0.625rem;
    border-radius: 0.625rem;
    box-shadow: 0px 4px 10px rgba(81, 74, 126, 0.2);
    flex-wrap: wrap;
  }

  .cart-item__left {
    width: 7.75rem;
  }

  .cart-item__right {
    width: calc(100% - 7.75rem);
    padding-left: 0.9375rem;
    flex-wrap: wrap;
  }

  .cart-item__right-col-1 {
    width: 100%;
  }

  .cart-item__right-col-2 {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }

  .cart-item__right-col-2 .cart-item__actions-link {
    display: inline-flex;
    margin-right: 0.625rem;
  }

  .cart-item__img img {
    border-radius: 0.625rem;
    height: 8.875rem;
  }

  .cart-item__name {
    font-size: 0.75rem;
    line-height: 0.875rem;
    margin-right: 0.625rem;
  }

  .cart-item__art {
    font-size: 0.625rem;
    line-height: 0.75rem;
  }

  .cart-item__title {
    margin-bottom: 0.5625rem;
  }

  .cart-item__info {
    font-size: 0.625rem;
    line-height: 0.75rem;
    margin-bottom: 1rem;
  }

  .cart-item__info-item {
    width: 100%;
  }

  .cart-item__info-item:not(:last-child) {
    margin-bottom: 0.1875rem;
    margin-right: 0;
  }

  .cart-item__counter {
    margin-bottom: 1.1875rem;
  }

  .cart-item__actions {
    display: none;
  }

  .cart-item__actions-link {
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .cart-item__actions-link svg {
    width: 0.9375rem;
    height: 0.9375rem;
    min-width: 0.9375rem;
    margin-right: 0.375rem;
  }

  .cart-item__link {
    display: none;
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .cart-item__price {
    margin-bottom: 0;
  }

  .cart-item__price-title {
    font-size: 0.75rem;
    line-height: 0.875rem;
    margin-bottom: 0;
  }

  .cart-item__price-value {
    font-size: 1.25rem;
    line-height: 1.5rem;
  }

  .cart-item__mobile {
    display: flex;
    width: 100%;
    margin-top: 1.75rem;
  }

  .cart-item__mobile .cart-item__link {
    display: inline;
  }

  .cart-total {
    margin-bottom: 1.875rem;
  }

  .cart-total__txt {
    font-size: 0.875rem;
    line-height: 1rem;
  }

  .cart-total__value {
    font-size: 1.25rem;
    line-height: 1.375rem;
    margin-right: 1.25rem;
  }

  .cart-total__count {
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .count {
    width: 4rem;
    height: 1.125rem;
  }

  .count__btn {
    width: 1.125rem;
    display: flex;
  }

  .count__minus svg {
    width: 1.125rem;
    height: 1.125rem;
  }

  .count__plus svg {
    width: 1.125rem;
    height: 1.125rem;
  }

  .count__input {
    width: 1.75rem;
    font-size: 0.875rem;
  }

  .product {
    padding-top: 5.125rem;
  }

  .product::after {
    display: none;
  }

  .product-head {
    display: none;
  }

  .product-title {
    display: none;
  }

  .product-content__left {
    width: 100%;
  }

  .product-content__right {
    width: 100%;
    padding-left: 0;
    display: flex;
    flex-direction: column;
  }

  .product-thumbs {
    display: none;
  }

  .product-gallery {
    margin-bottom: 0.625rem;
  }

  .product-gallery__btn {
    display: none;
  }

  .product-gallery__pagination {
    display: flex;
  }

  .product-gallery__img img {
    border-radius: 0.625rem;
  }

  .product-group-title {
    margin-bottom: 0;
    font-size: 0.75rem;
    line-height: 0.875rem;
    margin-right: 0.625rem;
  }

  .product-price {
    display: flex;
    align-items: flex-end;
    margin-bottom: 1.5625rem;
    order: 2;
  }

  .product-price__title {
    display: inline-block;
    padding-bottom: 0.125rem;
  }

  .product-price__value {
    font-size: 1.25rem;
    line-height: 1.5rem;
    color: #514A7E;
    font-weight: 400;
    margin-bottom: 0;
  }

  .product-mobile-title {
    display: flex;
    order: 1;
  }

  .product-colors {
    display: flex;
    align-items: center;
    margin-bottom: 1.8125rem;
    order: 3;
  }

  .product-colors__link {
    width: 0.75rem;
    height: 0.75rem;
    margin-right: 0.375rem;
  }

  .product-size {
    order: 4;
    margin-bottom: 1.75rem;
  }

  .product-size__group {
    display: flex;
    align-items: center;
    margin-bottom: 0.4375rem;
  }

  .product-size__item {
    margin-bottom: 0;
    width: 1.5625rem;
    height: 1.5625rem;
  }

  .product-size__item-value {
    font-size: 0.75rem;
    line-height: 1;
    margin-top: 0.125rem;
    margin-bottom: -0.5rem;
  }

  .product-size__item-number {
    font-size: 0.5rem;
  }

  .product-link {
    font-size: 0.75rem;
    line-height: 0.875rem;
  }

  .product-link--hidden {
    display: inline-block;
  }

  .product-desc {
    order: 5;
    margin-bottom: 1.3125rem;
  }

  .product-desc__title {
    font-size: 0.75rem;
    line-height: 0.875rem;
    margin-bottom: 0.5rem;
  }

  .product-desc__txt > *:last-child {
    margin-bottom: 0;
  }

  .product-rating {
    order: 6;
    margin-bottom: 1.0625rem;
  }

  .product-rating__list {
    margin-bottom: 0.4375rem;
  }

  .product-rating__star {
    margin-right: 0.3125rem;
  }

  .product-rating__star svg {
    width: 0.625rem;
    height: 0.625rem;
  }

  .product-rating__links {
    display: flex;
  }

  .product-rating__links a:not(:last-child) {
    margin-right: 1.25rem;
  }

  .product-actions {
    order: 7;
    justify-content: space-between;
    margin-bottom: 0;
  }

  .product-favorite {
    display: none;
  }

  .product-cart {
    margin-right: 0;
    width: 9.875rem;
  }

  .product-cart--hidden {
    display: inline-flex;
  }

  .product-mobile {
    display: block;
  }

  .order::after {
    display: none;
  }

  .order-head {
    display: none;
  }

  .order-mobile {
    display: block;
  }

  .orderForm__col {
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }

  .orderForm__row {
    margin-left: 0;
    margin-right: 0;
  }

  .orderForm__foot {
    margin-top: 1.875rem;
  }

  .orderForm-confirm {
    box-shadow: none;
  }

  .orderForm-radio {
    margin-left: -0.625rem;
    margin-right: -0.625rem;
    margin-bottom: -1.25rem;
  }

  .orderForm-radio__col {
    width: 50%;
    flex: initial;
    padding-left: 0.625rem;
    padding-right: 0.625rem;
    margin-bottom: 1.25rem;
  }

  .orderForm-radio__txt br {
    display: none;
  }

  .orderForm-radio__label-txt {
    font-size: 0.875rem;
  }

  .orderForm-radio__label-txt::before {
    margin-right: 0.5rem;
  }

  .header {
    padding-top: 0.6875rem;
    padding-bottom: 0.6875rem;
    position: relative;
  }

  .header--inner {
    display: none;
  }

  .header__menu {
    display: none;
  }

  .header__controls {
    display: none;
  }

  .header__actions {
    width: 100%;
  }

  .header__search {
    width: 100%;
  }

  .search-form {
    background: #FFFDF5;
    border-radius: 0.625rem;
    overflow: hidden;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .search-form__input {
    height: 2.1875rem;
    border: none;
    width: calc(100% - 1.25rem);
    padding-left: 0.5rem;
    display: block;
  }

  .search-form__btn {
    margin-right: 0;
    height: 2.1875rem;
  }

  .search-form__btn svg {
    fill: #7D7D7D;
  }

  .search-form__btn .icon-m-search {
    display: inline-block;
  }

  .search-form__btn .icon-search {
    display: none;
  }

  .leftPanel {
    right: 0;
    overflow: auto;
  }

  .leftPanel-left {
    width: 50%;
    height: auto;
  }

  .leftPanel-head {
    display: block;
  }

  .leftPanel-logo {
    padding-left: 1.125rem;
    max-width: 6rem;
  }

  .leftPanel-inner {
    position: relative;
    height: auto;
  }

  .menu__item:not(:last-child) {
    margin-bottom: 0.9375rem;
  }

  .menu__link {
    font-size: 0.875rem;
    line-height: 1rem;
  }


  .dropdown-menu {
    width: 50%;
    left: 50%;
    overflow: auto;
    padding-top: 0;
  }

  .bottomPanel {
    display: block;
  }

  .footer {
    padding-top: 0.625rem;
    padding-bottom: 1.75rem;
  }

  .footer__left {
    width: 6.625rem;
    order: 2;
    display: block;
  }

  .footer__left .footer-group {
    border-bottom: 0.5px solid rgba(255, 253, 245, 0.8);
    margin-bottom: 0.4375rem;
  }

  .footer__right {
    width: calc(100% - 6.625rem);
    order: 2;
    padding-left: 2.75rem;
  }

  .footer__logo {
    order: 1;
    width: 100%;
  }

  .footer-title {
    font-size: 0.625rem;
    line-height: 0.75rem;
    margin-bottom: 0.25rem;
  }

  .footer-title--collapse {
    font-weight: 300;
    display: flex;
    justify-content: space-between;
    margin-bottom: 0;
  }

  .footer-title--collapse svg {
    width: 0.625rem;
    height: 0.625rem;
    fill: #FFFDF5;
    display: inline-block;
  }

  .footer-logo {
    max-width: 1.875rem;
    margin-bottom: 0.625rem;
  }

  .footer-social {
    margin-bottom: 0.5rem;
  }

  .footer-social__link svg {
    width: 0.9375rem !important;
    height: 0.9375rem !important;
  }

  .footer-group {
    margin-right: 0;
    width: 100%;
  }

  .footer-menu__item {
    font-size: 0.625rem;
    line-height: 0.75rem;
  }

  .footer-menu__item:not(:last-child) {
    margin-bottom: 0.5rem;
  }

  .footer-txt {
    font-size: 0.625rem;
    line-height: 0.75rem;
    margin-top: 0;
  }

  .footer-hidden__inner {
    padding-top: 0.9375rem;
    padding-bottom: 0.9375rem;
  }

  .footer-info__item {
    font-size: 0.625rem;
    line-height: 0.75rem;
  }

  .footer-info__item:not(:last-child) {
    margin-bottom: 0.5rem;
  }

  .footer-info__item-icon {
    display: none;
  }

  .footer-info__item-txt {
    width: 100%;
    padding-left: 0;
  }
}

@media (max-width: 575.98px) {
  .modal-fullscreen-sm-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }

  .modal-fullscreen-sm-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }

  .modal-fullscreen-sm-down .modal-header {
    border-radius: 0;
  }

  .modal-fullscreen-sm-down .modal-body {
    overflow-y: auto;
  }

  .modal-fullscreen-sm-down .modal-footer {
    border-radius: 0;
  }
}

@media (max-width: 567px) {
  html {
    font-size: calc(100vw*16/375 + 0PX);
  }
}

@media (min-width: 768px) and (max-width: 1199px) {
  html {
    font-size: calc(100vw*16/1199 + 0PX);
  }
}

@media (prefers-reduced-motion: no-preference) {
  :root {
    scroll-behavior: smooth;
  }
}

@media (prefers-reduced-motion: reduce) {
  .modal.fade .modal-dialog {
    transition: none;
  }

  .fade {
    transition: none;
  }

  .collapsing {
    transition: none;
  }

  .collapsing.collapse-horizontal {
    transition: none;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
